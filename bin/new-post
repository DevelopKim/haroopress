#!/usr/bin/env node

var fs = require('fs'),
    spawn = require('child_process').spawn,
    readline = require('readline'),
    uglify = require('uglify-js'),
    stringEx = require('stringex'),
    conf = require('../config');

var rl = readline.createInterface(process.stdin, process.stdout, null);
rl.question('Enter article title : ', function(title) {
   var file = fs.readFileSync('_template/sample-post.markdown', 'utf8');
   var head = file.split('\n\n'),

    head = JSON.parse(head[0]);
    head.title = title;
    head.author = conf.meta.author;

    title = stringEx.stripHtmlTags(title);
    title = stringEx.toASCII(title);
    title = stringEx.toUrl(title);

    //이미 작성된 아티클이 있는지 체크
    try {
        var stat = fs.statSync(conf.sourceDir +'/articles/'+ title +'.markdown');
        if (stat.isFile()) {
            console.log('existed article');

            rl.close();
            process.stdin.destroy();
        }
    } catch(e) {
    }

    rl.question('Enter article category (e.g cate1, cate2, cate3 ) : ', function(categories) {
        if(categories.length) {
            head.categories = categories.split(',');
        }
        
        rl.question('Enter article tag (e.g tag1, tag2, tag3) : ', function(tags) {
            if(tags.length) {
                head.tags = tags.split(',');
            }
            head.date = new Date();
            head.published = head.date;
           
            //TODO: double quotation!!
            var header = JSON.stringify(head, null, 4);
            var path = conf.sourceDir +'/articles/' + title +'.markdown';
            fs.writeFileSync(path, header +'\n\nwrite here!', 'utf8');
            
            console.log('write post -> ', path);
            rl.close();
            process.stdin.destory();

            //instant edit
            /*rl.question(title +'.markdown editing at now? [y/n]', function(answer) {
                if (answer.charAt(0).toUpperCase() == 'N') {
                } else {
                    spawn('open', ['http://localhost:8001/write?'+ path]);
                }

                rl.close();
                process.stdin.destroy();

            });*/
            
        });
    });
});

